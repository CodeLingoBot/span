// Package sift implements various filters, that help with the record labelling (ISIL) process.
// The filters are independent of the concrete type, since the interface has be changed to
//
//     type Filter interface {
//         Apply(interface{}) bool
//     }
//
// The filter implementation will type assert various interfaces. Any value
// (intermediate schema, SOLR record, MARC) that implements the various interfaces
// around records can be used here. What is left to the caller of this library is
// to implement the appropriate action upon result, e.g. add a certain value to a
// field or add a new subfield and so on.
//
// Filters are composable and should allow for a wide variety of use cases.
//
// The goal is to have a declarative way to describe, who wants to see what and to
// have this configuration autogenerated from some external source, like AMSL.
//
package sift
